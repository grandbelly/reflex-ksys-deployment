# Reflex Production Deployment - Multi-Stage Build
# Stage 1: Build Frontend Assets
FROM python:3.11-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for frontend compilation
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Initialize Reflex project (creates .web directory structure)
RUN reflex init

# Export and compile frontend assets
# This is the critical step that builds all static files
RUN reflex export --frontend-only --no-zip

# Stage 2: Production Runtime
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Copy compiled frontend from builder stage
COPY --from=builder /app/.web /app/.web

# Set production environment variables
ENV PYTHONUNBUFFERED=1
ENV DOCKER_CONTAINER=true
ENV REFLEX_ENV_MODE=prod

# Expose ports
EXPOSE 13000 13001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:13000/ || exit 1

# Run production server
CMD ["reflex", "run", "--env", "prod", "--backend-host", "0.0.0.0"]
